#version 310 es
#define PRECISION mediump
precision PRECISION float;
layout(std430) buffer;
layout(set=0, binding=0) readonly buffer destBuffer{
    float data[];
} uInBuffer;


layout(set=0, binding=1) writeonly buffer sourceBuffer{
    vec4 data[];
}uOutBuffer;


layout(set=0, binding=2) uniform constBuffer{
    int width;
    int height;
    int channel;
    int batch;
} uConstant;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main()
{
    ivec3 pos = ivec3(gl_GlobalInvocationID);
    int batchIndex = pos.z / uConstant.channel;
    int zDiv4 = pos.z % uConstant.channel;
    int channelC4 = (uConstant.channel + 3) / 4;

    int lastZ = uConstant.channel / 4;
    int cIndex = uConstant.channel % 4;

    if (pos.x < uConstant.width && pos.y < uConstant.height)
    {
        vec4 color = vec4(0);
        int z = zDiv4*4;
        int basicOffset = z
            + uConstant.width*pos.y*uConstant.channel
            + uConstant.height*batchIndex*uConstant.width*uConstant.channel
            + pos.x*uConstant.channel;
        
        if(pos.z == lastZ)
        {
            if(cIndex == 1)
            {
                color.r = uInBuffer.data[basicOffset+0];
            }
            else if(cIndex == 2)
            {
                color.r = uInBuffer.data[basicOffset+0];
                color.g = uInBuffer.data[basicOffset+1];
            }
            else
            {
                color.r = uInBuffer.data[basicOffset+0];
                color.g = uInBuffer.data[basicOffset+1];
                color.b = uInBuffer.data[basicOffset+2];
            }
        }
        else
        {
            color.r = uInBuffer.data[basicOffset+0];
            color.g = uInBuffer.data[basicOffset+1];
            color.b = uInBuffer.data[basicOffset+2];
            color.a = uInBuffer.data[basicOffset+3];
        }

        uOutBuffer.data[0
            + uConstant.width*pos.y
            + pos.x
            + uConstant.width*uConstant.height*zDiv4
            + batchIndex*uConstant.width*uConstant.height*channelC4
            ] = color;
    }
}
